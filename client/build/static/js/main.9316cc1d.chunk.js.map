{"version":3,"sources":["auth/helpers.js","core/Layout.js","components/logo.js","App.js","auth/Signup.js","components/Images.js","auth/Signin.js","core/Private.js","auth/PrivateRoute.js","core/Admin.js","auth/AdminRoute.js","Routes.js","serviceWorker.js","index.js"],"names":["authenticate","response","next","key","value","console","log","data","token","window","cookie","set","expires","localStorage","setItem","JSON","stringify","setLocalStorage","user","isAuth","get","getCookie","getItem","parse","signout","remove","removeItem","removeLocalStorage","withRouter","children","match","history","isActive","path","color","className","to","style","role","name","cursor","onClick","push","Images","src","alt","class","Component","App","props","clear","Signup","useState","roll_number","register_number","email","password","buttonText","values","setValues","handleChange","event","target","clickSubmit","preventDefault","axios","method","url","then","toast","success","message","catch","error","onChange","type","Signin","Private","PrivateRoute","component","rest","render","pathname","state","from","location","Admin","AdminRoute","Routes","exact","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9316cc1d.chunk.js","sourcesContent":["import cookie from 'js-cookie';\r\n\r\n// set in cookie\r\nexport const setCookie = (key, value) => {\r\n    if (window !== 'undefined') {\r\n        cookie.set(key, value, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n// remove from cookie\r\nexport const removeCookie = key => {\r\n    if (window !== 'undefined') {\r\n        cookie.remove(key, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n// get from cookie such as stored token\r\n// will be useful when we need to make request to server with token\r\nexport const getCookie = key => {\r\n    if (window !== 'undefined') {\r\n        return cookie.get(key);\r\n    }\r\n};\r\n// set in localstorage\r\nexport const setLocalStorage = (key, value) => {\r\n    if (window !== 'undefined') {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n};\r\n// remove from localstorage\r\nexport const removeLocalStorage = key => {\r\n    if (window !== 'undefined') {\r\n        localStorage.removeItem(key);\r\n    }\r\n};\r\n// authenticate user by passing data to cookie and localstorage during signin\r\nexport const authenticate = (response, next) => {\r\n    console.log('AUTHENTICATE HELPER ON SIGNIN RESPONSE', response);\r\n    setCookie('token', response.data.token);\r\n    setLocalStorage('user', response.data.user);\r\n    next();\r\n};\r\n// access user info from localstorage\r\nexport const isAuth = () => {\r\n    if (window !== 'undefined') {\r\n        const cookieChecked = getCookie('token');\r\n        if (cookieChecked) {\r\n            if (localStorage.getItem('user')) {\r\n                return JSON.parse(localStorage.getItem('user'));\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport const signout = next => {\r\n    removeCookie('token');\r\n    removeLocalStorage('user');\r\n    next();\r\n};\r\n\r\nexport const updateUser = (response, next) => {\r\n    console.log('UPDATE USER IN LOCALSTORAGE HELPERS', response);\r\n    if (typeof window !== 'undefined') {\r\n        let auth = JSON.parse(localStorage.getItem('user'));\r\n        auth = response.data;\r\n        localStorage.setItem('user', JSON.stringify(auth));\r\n    }\r\n    next();\r\n};","import React, { Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { isAuth, signout } from '../auth/helpers';\r\n\r\nconst Layout = ({ children, match, history }) => {\r\n    const isActive = path => {\r\n        if (match.path === path) {\r\n            return { color: '#000' };\r\n        } else {\r\n            return { color: '#fff' };\r\n        }\r\n    };\r\n\r\n    const nav = () => (\r\n        <ul className=\"nav nav-tabs bg-primary\">\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/home\" className=\"nav-link \" style={isActive('/home')}>\r\n                    Home\r\n                </Link>\r\n            </li>\r\n\r\n            {!isAuth() && (\r\n                <Fragment>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\" style={isActive('/')}>\r\n                            Signin\r\n                        </Link>\r\n                    </li>\r\n                    \r\n                </Fragment>\r\n            )}\r\n\r\n            {isAuth() && isAuth().role === 'admin' && (\r\n            <Fragment>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={isActive('/admin')} to=\"/admin\">\r\n                        {isAuth().name}\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                        <Link to=\"/signup\" className=\"nav-link\" style={isActive('/signup')}>\r\n                            Add Student \r\n                        </Link>\r\n                </li>\r\n            </Fragment>\r\n            )}\r\n\r\n            {isAuth() && isAuth().role === 'student' && (\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={isActive('/private')} to=\"/private\">\r\n                        {isAuth().name}\r\n                    </Link>\r\n                </li>\r\n            )}\r\n\r\n            {isAuth() && (\r\n                <li className=\"nav-item\">\r\n                    <span\r\n                        className=\"nav-link\"\r\n                        style={{ cursor: 'pointer', color: '#fff' }}\r\n                        onClick={() => {\r\n                            signout(() => {\r\n                                history.push('/');\r\n                            });\r\n                        }}\r\n                    >\r\n                        Signout\r\n                    </span>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    );\r\n\r\n    return (\r\n        <Fragment>\r\n            {nav()}\r\n            <div className=\"container\">{children}</div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default withRouter(Layout);","import React, {Component} from \"react\"\r\n\r\nclass Images extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"text-center\">\r\n                <img src=\"images/Collegelogo.png\" alt=\"KPR Logo\" class=\"img-thumbnail\"></img>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Images;","import React from \"react\";\nimport Layout from './core/Layout'\nimport Images from './components/logo';\nimport './App.css';\n\n\n\nconst App = (props) => {\n   \n  return(\n    <div className=\"text-center\">\n    <Layout>\n  <div>\n    <p >\n        <h1 className=\"font-weight-bolder text-center p-5\">Welcome <br/> To <br/> KPR Institute Of Engineering And Technology</h1>\n    </p>\n    \n    <div className=\"col-md-2 rounded mx-auto d-block\">\n        <Images/>\n    </div>\n    <div className=\" text-center col-auto p-2\"> \n    <button onClick= {() => {\n        localStorage.clear();\n        props.history.push('/');\n    }} className=\" btn btn-outline-primary form-group\"> Logout</button>\n    </div>\n  </div>\n    </Layout>\n    </div>\n)\n};\nexport default App;","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Layout from '../core/Layout';\r\n\r\n\r\n\r\nconst Signup = () => {\r\n    const [values, setValues] = useState({\r\n        roll_number: '',\r\n        register_number: '',\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        buttonText: 'Submit'\r\n    });\r\n\r\n    const { roll_number,register_number,name,email,password,buttonText } = values;\r\n\r\n    const handleChange = name => event => {\r\n        setValues({...values, [name]: event.target.value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault()\r\n        setValues({...values, buttonText: 'Submitting'})\r\n        axios({\r\n            method: 'POST',\r\n            url: '/api/signup',\r\n            data: {roll_number,register_number,name,email,password}\r\n        })\r\n        .then(response => {\r\n            console.log('SIGNUP SUCCESS', response)\r\n            setValues({...values, roll_number: '',register_number: '', name: '',email: '', password: '', buttonText: 'Submitted'});\r\n            toast.success(response.data.message)\r\n        })\r\n        .catch(error => {\r\n            console.log('SIGNUP ERROR', error.response.data)\r\n            setValues({...values, buttonText: 'Submit'});\r\n            toast.error(error.response.data.error);\r\n        })\r\n    };\r\n\r\n    const signupForm = () => (\r\n        <form className=\"container col-md-10 border border-dark sticky-top rounded\">\r\n            <div className=\"form-group\">\r\n                <label className=\"col-sm-5 col-form-label font-weight-bold\">Roll Number</label>\r\n                <input onChange={handleChange('roll_number')} value={roll_number} type=\"text\" className=\"form-control\"/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"col-sm-5 col-form-label font-weight-bold\">Register Number</label>\r\n                <input onChange={handleChange('register_number')} value={register_number} type=\"text\" className=\"form-control\"/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"col-sm-5 col-form-label font-weight-bold\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" value={name} className=\"form-control\"/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"col-sm-5 col-form-label font-weight-bold\">Email</label>\r\n                <input onChange={handleChange('email')} value={email} type=\"text\" className=\"form-control\"/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"col-sm-5 col-form-label font-weight-bold\">Password</label>\r\n                <input onChange={handleChange('password')} value={password} type=\"text\" className=\"form-control\"/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <button className=\"btn btn-primary\" onClick={clickSubmit}>\r\n                    {buttonText}\r\n                </button>\r\n                \r\n            </div>\r\n        </form>\r\n    )\r\n \r\n\r\n\r\n    return(\r\n    <Layout>\r\n        <div className=\"col-md-8 offset-md-2 container\">\r\n                <ToastContainer/>\r\n                {signupForm()}\r\n        </div>\r\n    </Layout>\r\n    );\r\n}\r\n\r\nexport default Signup;","import React, {Component} from \"react\"\r\n\r\nclass Images extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"col-5 \">\r\n                <img class=\"rounded float-left\" src=\"images/Kprlogo.jpg\" alt=\"KPR Logo\" class=\"img-thumbnail\"></img>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Images;","\r\nimport React, {useState} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {authenticate} from './helpers';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { isAuth } from './helpers';\r\nimport '../App.css';\r\nimport Images from '../components/Images';\r\n\r\n\r\nconst Signin = ({history}) => {\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password: '',\r\n        buttonText: 'Submit'\r\n    });\r\n\r\n    const { email,password,buttonText } = values;\r\n\r\n    const handleChange = name => event => {\r\n        setValues({...values, [name]: event.target.value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault()\r\n        setValues({...values, buttonText: 'Submitting'})\r\n        axios({\r\n            method: 'POST',\r\n            url: '/api/signin',\r\n            data: {email,password}\r\n        })\r\n        .then(response => {\r\n            console.log('SIGNIN SUCCESS', response)\r\n            //save the response\r\n            authenticate(response, () => {\r\n\r\n                setValues({...values,roll_number: '',register_number: '', name: '',email: '', password: '', buttonText: 'Submitted'});\r\n                isAuth() && isAuth().role === 'admin' ? history.push('/admin') : history.push('/home');\r\n            })\r\n            \r\n        })\r\n        .catch(error => {\r\n            console.log('SIGNIN ERROR', error.response.data)\r\n            setValues({...values, buttonText: 'Submit'});\r\n            toast.error(error.response.data.error);\r\n        })\r\n    };\r\n\r\n    const signinForm = () => (\r\n  \r\n        <div className=\"container border border-dark rounded bg-light p-4 signinbox\">\r\n        <form className=\"col-form-label\">\r\n            <div className=\"form-group\">\r\n                <label className=\"col-sm-7 col-form-label font-weight-bold \">Email</label>\r\n                \r\n                <input onChange={handleChange('email')} value={email} type=\"text\" className=\"form-control\"/>\r\n                \r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"col-sm-5 col-form-label font-weight-bold\">Password</label>\r\n                <input onChange={handleChange('password')} value={password} type=\"password\" className=\"form-control\"/>\r\n            </div>\r\n            <div  className=\"d-flex justify-content-between\">\r\n                <button className=\"btn btn-primary\" onClick={clickSubmit}>\r\n                    {buttonText}\r\n                </button>\r\n                \r\n            </div>\r\n        </form>\r\n        </div>\r\n    )\r\n \r\n\r\n\r\n    return(\r\n    <div className=\"bg\">\r\n        <Images/>\r\n        <div  className=\"col-md-5 offset-md-2 container\">\r\n                <ToastContainer/>\r\n                {isAuth() ? <Redirect to=\"/\" /> : null}\r\n                {signinForm()}\r\n        </div>\r\n    </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\nimport Layout from './Layout';\r\n\r\n\r\nconst Private = () => (\r\n    <Layout>\r\n        <h1 className=\"text-center\">Student Private Page</h1>\r\n    </Layout>\r\n)\r\n\r\nexport default Private;","  import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isAuth } from './helpers';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuth() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: '/signin',\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    ></Route>\r\n);\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport Layout from './Layout';\r\n\r\n\r\nconst Admin = () => (\r\n    <Layout>\r\n        <h1 className=\"text-center\">Admin Page</h1>\r\n    </Layout>\r\n)\r\n\r\nexport default Admin;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isAuth } from './helpers';\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuth() && isAuth().role === 'admin' ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: '/signin',\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    ></Route>\r\n);\r\n\r\nexport default AdminRoute;","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport App from './App';\r\nimport Signup from './auth/Signup';\r\nimport Signin from './auth/Signin';\r\nimport Private from './core/Private';\r\nimport PrivateRoute from './auth/PrivateRoute';\r\nimport Admin from './core/Admin';\r\nimport AdminRoute from './auth/AdminRoute';\r\n\r\n\r\nconst Routes = () => {\r\n    return(\r\n        <BrowserRouter>\r\n             <Switch>\r\n                 <Route path=\"/home\" exact component={App} />\r\n                 <Route path=\"/signup\" exact component={Signup} />\r\n                 <Route path=\"/\" exact component={Signin} />\r\n                 <PrivateRoute path=\"/private\" exact component={Private} />\r\n                 <AdminRoute path=\"/admin\" exact component={Admin} />\r\n             </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}